{
module Lexer
open Microsoft.FSharp.Text.Lexing
open Parser
open System
}

rule buildGenerator = parse
	| '.'		{ ANY_CHAR }
	| '\\'_		{ ESCAPE (Convert.ToString (lexbuf.LexemeChar 1)) }
	| '?'		{ ZERO_OR_ONE }
	| '*'		{ ZERO_OR_MORE }
	| '+'		{ ONE_OR_MORE }
	| '('		{ OPEN_PARENTHESIS }
	| ')'		{ CLOSE_PARENTHESIS }
	| '['   	{ OPEN_SET }
	| ']'		{ CLOSE_SET }
	| _'-'_		{ RANGE (lexbuf.LexemeChar 0, lexbuf.LexemeChar 2)}
	| _    		{ LITERAL (LexBuffer<_>.LexemeString lexbuf) }
	| eof   	{ Parser.EOF }




